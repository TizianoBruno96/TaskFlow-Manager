# suppress inspection "UnusedProperty" for whole file

# QUARKUS
quarkus.http.port=8082
quarkus.http.test-port=8082
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
quarkus.http.cors.access-control-max-age=24H

# MONGO
quarkus.mongodb.connection-string=mongodb://${MONGO_HOST}:${MONGO_PORT}
quarkus.mongodb.database=myDb
mongodb.collection.tasks=tasks

# LOGGING
quarkus.log.console.enable=true

# KAFKA - Configurazione globale
quarkus.kafka.devservices.enabled=false
kafka.bootstrap.servers=PLAINTEXT://${KAFKA_HOST}:${KAFKA_PORT}

## Incoming - Configurazione per ogni canale con specifica del bootstrap server
mp.messaging.incoming.task-created.connector=smallrye-kafka
mp.messaging.incoming.task-created.bootstrap.servers=${KAFKA_HOST}:${KAFKA_PORT}
mp.messaging.incoming.task-created.topic=task-created
mp.messaging.incoming.task-created.broadcast=true
mp.messaging.incoming.task-created.value.deserializer=adapter.kafka.task.TaskDeserializer
mp.messaging.incoming.task-created.failure-strategy=dead-letter-queue
mp.messaging.incoming.task-created.value-deserialization-failure-handler=deserialization-failure-fallback

mp.messaging.incoming.task-updated.connector=smallrye-kafka
mp.messaging.incoming.task-updated.bootstrap.servers=${KAFKA_HOST}:${KAFKA_PORT}
mp.messaging.incoming.task-updated.topic=task-updated
mp.messaging.incoming.task-updated.broadcast=true
mp.messaging.incoming.task-updated.value.deserializer=adapter.kafka.task.TaskDeserializer
mp.messaging.incoming.task-updated.failure-strategy=dead-letter-queue
mp.messaging.incoming.task-updated.value-deserialization-failure-handler=deserialization-failure-fallback

mp.messaging.incoming.project-created.connector=smallrye-kafka
mp.messaging.incoming.project-created.bootstrap.servers=${KAFKA_HOST}:${KAFKA_PORT}
mp.messaging.incoming.project-created.topic=project-created
mp.messaging.incoming.project-created.broadcast=true
mp.messaging.incoming.project-created.value.deserializer=adapter.kafka.project.ProjectDeserializer
mp.messaging.incoming.project-created.failure-strategy=dead-letter-queue
mp.messaging.incoming.project-created.value-deserialization-failure-handler=deserialization-failure-fallback

mp.messaging.incoming.project-updated.connector=smallrye-kafka
mp.messaging.incoming.project-updated.bootstrap.servers=${KAFKA_HOST}:${KAFKA_PORT}
mp.messaging.incoming.project-updated.topic=project-updated
mp.messaging.incoming.project-updated.broadcast=true
mp.messaging.incoming.project-updated.value.deserializer=adapter.kafka.project.ProjectDeserializer
mp.messaging.incoming.project-updated.failure-strategy=dead-letter-queue
mp.messaging.incoming.project-updated.value-deserialization-failure-handler=deserialization-failure-fallback

# Load secrets
quarkus.config.locations=src/main/resources/datasource.properties
